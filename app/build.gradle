plugins {
    id 'com.android.application'
    id 'kotlin-android'
    id 'kotlin-kapt'
    id "androidx.navigation.safeargs.kotlin"
    id 'com.google.gms.google-services'
    id("com.apollographql.apollo3").version("$apollo_version")
    id 'com.google.secrets_gradle_plugin' version '0.5'
    id("org.jetbrains.dokka")
    id("org.jlleitschuh.gradle.ktlint") version "10.2.1"
    id 'dagger.hilt.android.plugin'
}

android {
    signingConfigs {
        release {
            storeFile file(var)
            storePassword project.properties.KEYSTORE_PASSWORD
            keyPassword project.properties.KEYSTORE_PASSWORD
            keyAlias project.properties.KEY_ALIAS
        }
    }
    compileSdk 31

    defaultConfig {
        applicationId "com.frommetoyou.modulesapp2"
        minSdk 23
        targetSdk 31
        versionCode 13
        versionName "1.1"

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
        signingConfig signingConfigs.release
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }
    buildFeatures{
        dataBinding true
        mlModelBinding true
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
    kotlinOptions {
        jvmTarget = '1.8'
    }
    aaptOptions{
        noCompress "tflite"
    }
    dynamicFeatures = []
}

apollo {
    packageName.set("com.frommetoyou.modulesapp2")
    generateKotlinModels.set(true)
}

dokkaHtml.configure {
    dokkaSourceSets {
        named("main") {
            noAndroidSdkLink.set(false)
        }
    }
}

dependencies {
    //modules
    implementation project(path: ':core')
    implementation project(path: ':facts_usecase_module')
    implementation project(path: ':feature_lists')

    implementation 'androidx.core:core-ktx:1.7.0'
    implementation 'androidx.appcompat:appcompat:1.4.1'
    implementation 'com.google.android.material:material:1.5.0'
    implementation 'androidx.constraintlayout:constraintlayout:2.1.3'
    implementation 'androidx.legacy:legacy-support-v4:1.0.0'
    implementation 'androidx.security:security-crypto-ktx:1.1.0-alpha03'
    //google play core for dynamic features
    implementation 'com.google.android.play:core-ktx:1.8.1'
    implementation 'com.google.firebase:firebase-dynamic-links-ktx:21.0.0'
    implementation 'org.tensorflow:tensorflow-lite-support:0.1.0'
    implementation 'org.tensorflow:tensorflow-lite-metadata:0.1.0'
    implementation 'androidx.test:runner:1.4.0'
    implementation 'com.google.android.libraries.places:places:2.5.0'
    testImplementation 'junit:junit:4.13.2'
    androidTestImplementation 'androidx.test.ext:junit:1.1.3'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.4.0'

    //Navigation
    implementation "androidx.navigation:navigation-fragment-ktx:$nav_version"
    implementation "androidx.navigation:navigation-ui-ktx:$nav_version"
    androidTestImplementation "androidx.navigation:navigation-testing:$nav_version"

    //feature modules navigation
    api("androidx.navigation:navigation-dynamic-features-fragment:$nav_version")

    //Apollo
    implementation("com.apollographql.apollo3:apollo-runtime:$apollo_version")

    // Preferences DataStore (SharedPreferences like APIs)
    implementation("androidx.datastore:datastore-preferences:1.0.0")

    //Object detection
    implementation 'com.google.mlkit:object-detection:17.0.0'
    implementation 'com.google.mlkit:object-detection-custom:17.0.0' //uso este

    //cameraX
    def camerax_version = "1.1.0-beta01"
    implementation "androidx.camera:camera-camera2:${camerax_version}"
    implementation "androidx.camera:camera-lifecycle:${camerax_version}"
    implementation "androidx.camera:camera-view:${camerax_version}"

    //in app purchases
    def billing_version = "4.0.0"
    implementation "com.android.billingclient:billing-ktx:$billing_version"

    //Glide
    def glide = "4.12.0"
    implementation "com.github.bumptech.glide:glide:$glide"
    annotationProcessor "com.github.bumptech.glide:compiler:$glide"

    //WorkManager
    implementation "androidx.work:work-runtime-ktx:2.7.1"
    implementation 'io.reactivex.rxjava2:rxkotlin:2.4.0'
    implementation 'com.squareup.picasso:picasso:2.71828'
    implementation 'com.squareup.okhttp3:okhttp:3.13.1'
    implementation 'org.greenrobot:eventbus:3.1.1'
    implementation 'androidx.hilt:hilt-work:1.0.0'

    //testcoroutines
    testImplementation 'org.jetbrains.kotlinx:kotlinx-coroutines-test:1.5.1'

    //Mockito
    testImplementation 'org.mockito:mockito-core:3.6.28'
    testImplementation 'org.mockito:mockito-inline:2.13.0'
    testImplementation "org.mockito.kotlin:mockito-kotlin:4.0.0"

    //turbine
    testImplementation 'app.cash.turbine:turbine:0.7.0'

    //maps
    implementation 'com.google.android.gms:play-services-maps:18.0.2'
    implementation 'com.google.maps.android:android-maps-utils:1.1.0'


    //Dagger - Hilt
    api "com.google.dagger:hilt-android:2.38.1"
    api "androidx.hilt:hilt-lifecycle-viewmodel:1.0.0-alpha03"
    api "androidx.activity:activity-ktx:1.4.0"
    kapt "com.google.dagger:hilt-android-compiler:2.37"
    kapt "androidx.hilt:hilt-compiler:1.0.0"
}

task installGitHook(type: Copy) {
    from new File(rootProject.rootDir, 'scripts/pre-commit')
    into { new File(rootProject.rootDir, '.git/hooks') }
    fileMode 0777
}
tasks.getByPath(':app:preBuild').dependsOn installGitHook